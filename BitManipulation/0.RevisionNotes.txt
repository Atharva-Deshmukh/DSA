Topics to revise:
- 4. BK Algo
- 7. Toggle ith bit 
  
  function Toggle_ith_Bit(n: number, k: number): number {
    return (n ^ (1 << (k-1)));
  }

  concept of buckets in single number 2 problem

  To separate two numbers from XOR (bucket in single number 3)

  --------------------------------------------Topics to revise--------------------------------------------
- BK Algo

  --------------------------------------------CONCEPTS HERE ITSELF--------------------------------------------

  EVEN-ODD:
  - check last bit --> return Boolean(n&1);

  NO OF BITS in n:
  - return (Math.floor(Math.log2(n)) + 1);

  CHECK FOR POWER OF 2:
  - has only 1 bit
  -  return ((n > 0) & (n & (n-1)) === 0);

  COUNT SET BITS: 
  - Revise full Q4
  - Recursion and BK 
  
  SET kth bit: (k = 1st, second i.e. absolute position)
  - return ((1 << (k - 1)) | n)  
  - OR used since 0 -> 1 and 1 -> 1

  TOGGLE kth bit: (k = 1st, second i.e. absolute position)
  - return ((1 << (k - 1)) ^ n)  
  - XOR used since 0 -> 1 and 1 -> 0

  REMOVE LAST SET BIT
  - return (n & (n - 1))  

  POSITION OF RIGHTMOST SET BIT
  - return Math.log2((n & (n - 1)) ^ n)  