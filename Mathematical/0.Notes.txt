
////////////////////////////////////// QUESTIONS TO FULLY REVISE //////////////////////////////////////////////
- Q.5
- Q.7
- Q.8
- Q.9
- Q.10

////////////////////////////////////// CONCEPTS //////////////////////////////////////////////////////////////

KNOW THAT: sum of odd numbers is a perfect square
For 1,3,5,7,9,11
1 + 3 = 4                      Iterations = 2 = sqrt(4)
1 + 3 + 5 = 9                  Iterations = 3 = sqrt(9)
1 + 3 + 5 + 7 = 16 and so on,

POWER EXPONENTIATION TRICK:
Logic:
- let ans = 1;
- Iterate till currentPower = 0

- if(currentPower === odd) 
  ans = ans * currentBase
  currentPower = currentPower - 1

- if(currentPower === even) 
  currentPower = currentPower / 2
  currentBase = (currentBase * currentBase) = (currentBase ^ 2)
  

Dry run:
- let ans = 1, n = 2, x = 21

while (x > 0)

- when power is ODD, separate only one number and do power-1 
  pow(2,21) = 2 *  pow(2,20)
  multiply this to ans, ans = ans * 2

- when power is EVEN, do n = n*n and power = power/2
  pow(2,20) =  pow(2^2,20/2) = pow(4,10)  

- now, x is EVEN, 
  pow(4,10) = pow(4^2,10/2) = pow(16,5)

- now, x is ODD
  pow(16,5) = 16 * pow(16,4)
  ans = ans * 16

- now, x is EVEN
  pow(16,4) = pow(16^2,4/2) = pow(256,2)

- now, x is EVEN
  pow(256,2) = pow(256^2,2/2) = pow(65536,1)

- now, x is ODD
  pow(65536,1) = 65536 * pow(65536,0) = 65536 * 1 = 65536
  ans = ans * 65536

  return ans     